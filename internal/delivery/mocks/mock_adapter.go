// Code generated by MockGen. DO NOT EDIT.
// Source: internal/delivery/adapter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	deliveryentity "github.com/caudaganesh/go-design-pattern/internal/delivery/deliveryentity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserAdapter is a mock of UserAdapter interface
type MockUserAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockUserAdapterMockRecorder
}

// MockUserAdapterMockRecorder is the mock recorder for MockUserAdapter
type MockUserAdapterMockRecorder struct {
	mock *MockUserAdapter
}

// NewMockUserAdapter creates a new mock instance
func NewMockUserAdapter(ctrl *gomock.Controller) *MockUserAdapter {
	mock := &MockUserAdapter{ctrl: ctrl}
	mock.recorder = &MockUserAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserAdapter) EXPECT() *MockUserAdapterMockRecorder {
	return m.recorder
}

// GetUser mocks base method
func (m *MockUserAdapter) GetUser(request deliveryentity.GetUserRequest) (deliveryentity.GetUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", request)
	ret0, _ := ret[0].(deliveryentity.GetUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser
func (mr *MockUserAdapterMockRecorder) GetUser(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserAdapter)(nil).GetUser), request)
}
