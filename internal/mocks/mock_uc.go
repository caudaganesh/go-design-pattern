// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "github.com/caudaganesh/go-design-pattern/internal/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserUC is a mock of UserUC interface
type MockUserUC struct {
	ctrl     *gomock.Controller
	recorder *MockUserUCMockRecorder
}

// MockUserUCMockRecorder is the mock recorder for MockUserUC
type MockUserUCMockRecorder struct {
	mock *MockUserUC
}

// NewMockUserUC creates a new mock instance
func NewMockUserUC(ctrl *gomock.Controller) *MockUserUC {
	mock := &MockUserUC{ctrl: ctrl}
	mock.recorder = &MockUserUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserUC) EXPECT() *MockUserUCMockRecorder {
	return m.recorder
}

// GetUser mocks base method
func (m *MockUserUC) GetUser(ID int) (entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ID)
	ret0, _ := ret[0].(entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser
func (mr *MockUserUCMockRecorder) GetUser(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserUC)(nil).GetUser), ID)
}
